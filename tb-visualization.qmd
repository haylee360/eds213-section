---
title: "213-section"
author: "Haylee Oyler"
format: html
---

```{r}
library(tidyverse)
library(DBI)
library(dbplyr)
library(ggpmisc)
library(ggthemes)
```

```{r}
conn <- DBI::dbConnect(duckdb::duckdb(), dbdir="tbdatabase.db")
```

```{r}
DBI::dbListTables(conn)
```

```{r}
# Reference the tables
tuberculosis <- tbl(conn, "tuberculosis")
country <- tbl(conn, "country")
socioecon <- tbl(conn, "socioecon")
tb_gdp <- tbl(conn, "tb_gdp")
```

```{r}
# Build the query
tb_gdp_top10 <- tuberculosis %>%
  inner_join(country, by = "CountryCode") %>%
  inner_join(socioecon, by = c("CountryCode", "Year")) %>%
  filter(!is.na(Incidence), !is.na(GDPCapita), Year == 2023) %>%
  arrange(desc(Incidence)) %>%
  head(10) %>% 
  collect()
```


```{r}
tb_gdp_graph <- tb_gdp %>% collect()
```

```{r}
tb_plot <- tb_gdp_graph %>% 
  filter(Year == 2023) %>% 
  ggplot(aes(x = log(GDPCapita), y = log(Incidence))) + 
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, color = "#f32f50") +
  # Auto add the R2 to the graph
  stat_poly_eq(mapping = use_label("R2"), 
               label.x = "right", label.y = "top") +
  labs(title = "GDP per Capita vs. Tuberculosis Incidence Rates in 2023",
       x = "GDP per Capita ($)",
       y = "Tuberculosis Incidence (cases/100K people)",
       caption = "Both variables are log-transformed") +
  theme_economist() +
    theme(axis.title.y = element_text(size = 16, margin = margin(t = 0, r = 10, 
                                                      b = 0, l = 0)),
          axis.title.x = element_text(size = 16, margin = margin(t = 10, r = 0, 
                                                      b = 0, l = 0)),
          plot.title = element_text(size = 20, margin = margin(t = 0, r = 0, 
                                                    b = 20, l = 0)),
)

```

```{r}
ggsave(
  filename = here::here("images", "tb.png"),
  plot = tb_plot,
  device = "png",
  width = 9,
  height = 6,
  unit = "in",
  dpi = 300,
)
```


```{r}
# dumbbell plot
dumbbell_plot <- ggplot(fields_wide) +
  geom_linerange(aes(y = subject_area_or_subfield,
                     xmin = percent_field_Women, 
                     xmax = percent_field_Men)) +
  geom_point(aes(x = percent_field_Women, 
                 y = subject_area_or_subfield, 
                 color = "Women"), size = 3.5) +
  geom_point(aes(x = percent_field_Men, 
                 y = subject_area_or_subfield, 
                 color = "Men"),
             size = 3.5) +
  # geom_vline(xintercept = .5, linetype = "dashed", color = "gray40") +
  # scale_x_continuous(breaks = seq(0, 1, by = 0.1),
  #                    labels = scales::percent_format(scale = 100)) +  
  # scale_color_manual(values = c("Women" = "#ec9bfc", "Men" = "#6A1E99")) + 
  labs(title = "Tuberculosis Incidence Rates and GDP", 
      x = "",
      y = "")
  # theme_minimal(base_size = 20)  + 
  #   theme(
  #   text = element_text(family = "lexend"),
  #   plot.title = ggtext::element_textbox(face = "bold", 
  #                                        margin = margin(t = 0,r = 0, 
  #                                                        b = 0, l = -130),
  #                                        padding = margin(t = 0, r = 0, 
  #                                                         b = 15, l = 0)),
  #   axis.title =  ggtext::element_textbox(size = rel(1.1),
  #                                         color = "black",
  #                                         padding = margin(t = 10, r = 0, 
  #                                                          b = 0, l = 0)),
  #   axis.text.x = element_text(size=rel(1), face = "bold"),
  #   axis.text.y = element_text(size=rel(0.9), color = "black"),
  #   plot.caption = element_text(size=rel(0.6)),
  #   panel.grid.minor.x = element_blank(),
  #   legend.position="none"
  #   )

dumbbell_plot
```

```{r}
dbDisconnect(conn)
```


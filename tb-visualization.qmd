---
title: "213 Section Presentation Prep"
author: "Haylee Oyler"
format: html
execute:
  warning: false
  message: false
---

```{r}
library(tidyverse)
library(DBI)
library(dbplyr)
library(ggpmisc)
library(ggthemes)
```

```{r}
# Open connection
conn <- DBI::dbConnect(duckdb::duckdb(), dbdir="tbdatabase.db")
```

```{r}
# View tables
DBI::dbListTables(conn)
```

```{r}
# Reference the tables
tuberculosis <- tbl(conn, "tuberculosis")
country <- tbl(conn, "country")
socioecon <- tbl(conn, "socioecon")
tb_gdp <- tbl(conn, "tb_gdp")
```

```{r}
# Recreate my SQL analysis using dbplyer
tb_gdp_df <- tuberculosis %>%
  inner_join(country, by = "CountryCode") %>%
  inner_join(socioecon, by = c("CountryCode", "Year")) %>%
  filter(!is.na(Incidence), !is.na(GDPCapita)) %>%
  select(CountryCode, CountryName, Year, Incidence, GDPCapita) %>% 
  collect()
```


```{r}
# Find the 10 countries with the highest TB rates
top10_tb <- tuberculosis %>%
  inner_join(country, by = "CountryCode") %>%
  inner_join(socioecon, by = c("CountryCode", "Year")) %>%
  filter(!is.na(Incidence), !is.na(GDPCapita), Year == 2023) %>%
  arrange(desc(Incidence)) %>%
  head(10) %>% 
  collect()

# Find the ten countries with the highest GDP / capita
top10_gdp <- tuberculosis %>%
  inner_join(country, by = "CountryCode") %>%
  inner_join(socioecon, by = c("CountryCode", "Year")) %>%
  filter(!is.na(Incidence), !is.na(GDPCapita), Year == 2023) %>%
  arrange(desc(GDPCapita)) %>%
  head(10) %>% 
  collect()
```


```{r}
# Create scatter plot of TB incidence and GDP
tb_plot <- tb_gdp_df %>% 
  filter(Year == 2023) %>% 
  ggplot(aes(x = log(GDPCapita), y = log(Incidence))) + 
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, color = "#f32f50") +
  # Auto add the R2 to the graph
  stat_poly_eq(mapping = use_label("R2"), 
               label.x = "right", label.y = "top") +
  labs(title = "GDP per Capita vs. Tuberculosis Incidence Rates in 2023",
       x = "GDP per Capita ($)",
       y = "Tuberculosis Incidence (cases/100K people)",
       caption = "Both variables are log-transformed") +
  theme_economist() +
    theme(axis.title.y = element_text(size = 16, margin = margin(t = 0, r = 10, 
                                                      b = 0, l = 0)),
          axis.title.x = element_text(size = 16, margin = margin(t = 10, r = 0, 
                                                      b = 0, l = 0)),
          plot.title = element_text(size = 20, margin = margin(t = 0, r = 0, 
                                                    b = 20, l = 0)),
)
tb_plot
```

```{r}
# Save plot
ggsave(
  filename = here::here("images", "tb.png"),
  plot = tb_plot,
  device = "png",
  width = 9,
  height = 6,
  unit = "in",
  dpi = 300,
)
```

```{r}
# Plot countries with the highest TB rates
tb_bar <- ggplot(top10_tb, aes(x = reorder(CountryName, Incidence), y = Incidence)) +
  geom_col(fill = "cornflowerblue") +
  coord_flip() +
  labs(title = "Top ten countries with the highest tuberculosis rates\n2023",
       x = "",
       y = "TB Incidence (cases/100K people)") +
  theme_minimal() +
  theme(title = element_text(size = 16),
        axis.text.y = element_text(size =14, color = "black"),
        axis.text.x = element_text(size =12),
        plot.margin = margin(10,30,10,10,))
tb_bar
```

```{r}
# Save plot
ggsave(
  filename = here::here("images", "tb_bar.png"),
  plot = tb_bar,
  device = "png",
  width = 9,
  height = 6,
  unit = "in",
  dpi = 300,
)
```

```{r}
# Plot the countries with the higest GDP/capita
gdp_bar <- ggplot(top10_gdp, aes(x = reorder(CountryName, GDPCapita), y = GDPCapita)) +
  geom_col(fill = "gold") +
  coord_flip() +
  labs(title = "Top ten countries with the highest GDP/Capita 2023",
       x = "",
       y = "GDP/capita ($)") +
  theme_minimal() +
  theme(title = element_text(size = 16),
        axis.text.y = element_text(size =14, color = "black"),
        axis.text.x = element_text(size =12),
                plot.margin = margin(10,30,10,10,))
gdp_bar
```

```{r}
# Save plot
ggsave(
  filename = here::here("images", "gdp_bar.png"),
  plot = gdp_bar,
  device = "png",
  width = 9,
  height = 6,
  unit = "in",
  dpi = 300,
)
```


```{r}
dbDisconnect(conn)
```

